datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?

  accounts Account[]
  sessions Session[]
  // emp mp?

  role String? @default("user")
  city String? @default("jajpur")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

//models starts here
model jobsheet {
  id String @id @default(cuid())

  verifiedBy String @default("false") //not pused
  callClosed String @default("false") //not pused

  madeBy String

  email    String
  address  String
  circle   String
  division String
  product  String
  serial   Int
  modelno  Int

  earthing              String
  stabilizer            String
  IPVoltage             Int
  OPVoltage             Int
  grillTemperature      Int
  roomTemperature       Int
  ambientTemperature    Int
  technicianName        String
  visitDate             DateTime
  faultFound            String
  actionTaken           String[]
  extraMaterial         String
  copperPipe            Int?
  drainPipe             Int?
  wire                  Int?
  ODUStand              Int?
  PinPlug               Int?
  airFilter             Int?
  technicianComments    String
  newSparepartConsumed  String
  PartReplacementDetail String[] // Array of strings
  totalAmount Int @default(0)

  complains    complains[]

  createdAt DateTime @default(now())
}

model complains {
  id        String   @id @default(cuid())
  name   String
  email     String
  complainId String
  city     String
  description String
  status String @default("New") 

  jobSheetId String? 
  jobSheet   jobsheet? @relation(fields: [jobSheetId], references: [id])
  createdAt DateTime @default(now())
}

model emp {
  id    String @id @default(cuid())
  name  String
  email String
  area  String
  // UserId   String

  createdAt DateTime @default(now())
}

model userform {
  id String @id @default(cuid())

  informationDate  DateTime
  location         String
  email            String
  machineInstalled String
  make             String
  type             String
  tonnage          String
  serial           Int
  priority         String
  problem          String
  call             String @default("not closed")

  createdAt DateTime @default(now())
}
